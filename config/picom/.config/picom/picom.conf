#
# picom/picom.conf
#

## Shadows

# client-side shadows on windows
shadow = true;

# blur radius for shadows in pixels
shadow-radius = 8;

# opacity of shadows
shadow-opacity = 0.5;

# left offset for shadows in pixels
shadow-offset-x = -7;

# the top offset for shadows in pixels
shadow-offset-y = -7;

## Fading

# fading windows in/out when opening/closing and when opacity changes
fading = true;

# opacity change between steps while fading in
fade-in-step = 0.03;

# opacity change between steps while fading out
fade-out-step = 0.03;

# time between steps in fade step in milliseconds
fade-delta = 3;

## Settings

# backend to use
backend = "glx";

# enable/disable vsync
vsync = true;

# detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows
detect-client-opacity = true;

# use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window,
# rather than listening to 'FocusIn'/'FocusOut' event
# (may be more accurate, provided that the WM supports it)
use-ewmh-active-win = true;

# unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows
unredir-if-possible = false;

# use 'WM_TRANSIENT_FOR' to group windows
# and consider windows in the same group focused at the same time
detect-transient = true;

# use damage information for rendering
use-damage = true;

## Rules

# rule-based per-window options
rules: (
  {
    match = "window_type = 'tooltip'";
    fade = false;
    shadow = true;
    opacity = 0.75;
    full-shadow = false;
  },
  {
    match = "name = 'Notification'"
        " || window_type *= 'notification'"
        " || window_type *= 'menu'"
        " || window_type *= 'dropdown_menu'"
        " || window_type *= 'popup_menu'"
        " || window_type *= 'utility'"
        " || window_type *= 'dnd'"
        " || class_g = 'Conky'"
        " || class_g = 'i3-frame'"
        " || _GTK_FRAME_EXTENTS@";
    shadow = false;
  }
)
